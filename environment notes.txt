
***WORKING LINUX + CONDA - environment.yml***
module load languages/anaconda3/2022.12-3.9.13-torch-cuda-11.7 [CANT INSTALL LIBROSA]
module load languages/anaconda3/2022.11-3.9.13 [TESTING AS BROKEN TORCH WITH ABOVE]
conda create -n ecgpcg python=3.9.13
-- check https://pytorch.org/ for cuda/python/conda compatibility
[e.g. conda install pytorch torchvision torchaudio pytorch-cuda=11.7 -c pytorch -c nvidia]
conda update --all
[conda install -y -c pytorch -c conda-forge cudatoolkit=11.7 pytorch torchvision torchaudio]

conda install -c conda-forge librosa
conda install -c conda-forge matplotlib
conda install -c conda-forge pywavelets
conda install -c conda-forge wfdb
conda install -c conda-forge scipy
conda install -c anaconda pandas
conda install -c anaconda seaborn
conda install -c conda-forge tqdm
conda install -c conda-forge configargparse
conda install -c conda-forge regex
conda install -c conda-forge scikit-image
--VIDEO conda install -c conda-forge opencv
--VIDEO conda install -c conda-forge moviepy
--MODEL tensorboard
--UNUSED conda install -c conda-forge scikit-build

--IF No module named XXX:	pip install -U pip setuptools

conda create --clone pytorch --name ecgpcg
pip install torch==1.12.1+cu116 torchvision==0.13.1+cu116 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu116
python -c "import torch; print(torch.__version__)"
python -c "import torch; print(torch.cuda.is_available()); print(torch.cuda.device_count()); print(torch.cuda.get_device_name(0))"





alias python='python3'
alias pip='pip3'

[apt-get install libjpeg-dev zlib1g-dev libpng-dev]
pip3 install --upgrade torchvision==0.11.0
pip3 install --upgrade torch==1.10.0
pip3 install --upgrade matplotlib==3.2
pip3 install cudatoolkit=11.3
pip3 install pytorch==1.10.0
pip3 install torchaudio
pip3 install PyWavelets
pip3 install scipy
pip3 install wfdb
###pip install ffmpeg-python
pip3 install scikit-build
pip3 install cmake
pip3 install --upgrade pip setuptools wheel
pip3 install opencv-python
pip3 install pandas
pip3 install seaborn
pip3 install tqdm
pip3 intall librosa
pip install scikit-image


#LINUX
	pip install resource

#WINDOWS
    pip install pywin32
	pip install psutil
		import winerror
        import win32api
        import win32job


# install python3.8.1, then conda, then make virtualenv using path to python3.8.1, then install packages

conda clean --all -y
conda install virtualenv
conda create -n py37 python=3.7.9 anaconda
# CUDA 10.2
conda install pytorch==1.10.0 torchvision==0.11.0 torchaudio==0.10.0 cudatoolkit=10.2 -c pytorch
# CUDA 11.3
conda install pytorch==1.10.0 torchvision==0.11.0 torchaudio==0.10.0 cudatoolkit=11.3 -c pytorch -c conda-forge
# CPU Only
conda install pytorch==1.10.0 torchvision==0.11.0 torchaudio==0.10.0 cpuonly -c pytorch
conda install -c conda-forge matplotlib
conda install -c conda-forge pywavelets
conda install -c conda-forge wfdb
conda install -c conda-forge scikit-build
conda install -c conda-forge scipy
conda install -c conda-forge opencv
conda install -c anaconda pandas
conda install -c anaconda seaborn
conda install -c conda-forge tqdm
conda install -c conda-forge librosa
conda install -c conda-forge configargparse
conda install -c conda-forge regex
#conda install pillow=6.1
conda install -c anaconda cmake
conda install -c conda-forge scipy

conda install -c anaconda pandas seaborn cmake
conda install -c conda-forge wfdb scikit-build opencv tqdm librosa configargparse regex scipy

ECGPCG
# WINDOWS
ADD TO PATH: {installation_directory_path}\python.exe -V

python -m virtualenv --python="{installation_directory_path}\python.exe" "{path_to_environment}/{environment_name}"
	(e.g. python -m virtualenv --python="C:/Users/willi/AppData/Local/Programs/Python/Python38-32/python.exe" "D:/Uni/Thesis/NEWREPO/multimodal-cardiography-learning/envs/ecgpcg-new")
D:/Uni/Thesis/NEWREPO/multimodal-cardiography-learning/envs/ecgpcg-new/Scripts/activate.bat  [.ps1]
deactivate 

TO FIX activate.bat NOT RUNNING: Set-ExecutionPolicy Unrestricted --Force AS ADMINISTRATOR 

#LINUX TODO
sudo apt-get install python3.7.9
	or
wget https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tgz
tar -xf Python-3.7.9.tgz
cd Python-3.7.9
./configure --enable-optimizations
make -j {processor_count}
sudo make altinstall
python3.7 --version
python -m virtualenv --python="C:/Users/willi/AppData/Local/Programs/Python/Python38-32/python.exe" "D:/Uni/Thesis/NEWREPO/multimodal-cardiography-learning/envs/ecgpcg-new"
python -m virtualenv --python="C:/Users/willi/AppData/Local/Programs/Python/Python37/python.exe" "D:/Uni/Thesis/NEWREPO/multimodal-cardiography-learning/envs/ecgpcg-new"
python -m virtualenv D:/Uni/Thesis/NEWREPO/multimodal-cardiography-learning/envs/ecgpcg-new/Scripts/activate.bat
python -m virtualenv D:/Uni/Thesis/NEWREPO/multimodal-cardiography-learning/envs/ecgpcg-new/Scripts/Activate.ps1
deactivate 








https://pytorch.org/get-started/previous-versions/

pip install torch==1.12.0 torchvision==0.13.0 torchaudio==0.12.0 [+ cuda]
pip install matplotlib
pip install pywavelets
pip install wfdb
pip install opencv-python
pip install pandas
pip install seaborn
pip install tqdm
pip install librosa
pip install configargparse
pip install regex
pip install tensorboard
pip install moviepy
pip install scikit-image
pip install torch_ecg

# pip install pillow==6.2
pip install librosa==0.8
# pip install numba==0.53

#LINUX
	pip install resource

#WINDOWS
    pip install pywin32
	pip install psutil
	 	import winerror
		import win32api
		import win32job

pip install scikit-build
pip install scipy


python -c "import torch; print(torch.cuda.is_available()); print(torch.cuda.device_count()); print(torch.cuda.get_device_name(0))"








pip install cudatoolkit
conda env create -n ecgpcg-new2 python=3.8.1

ECGPCG
conda create -n ecgpcg --file=environment.yml python=3.8.1
conda install pytorch==1.10.1 torchvision==0.11.2 torchaudio==0.10.1 cudatoolkit=10.2 -c pytorch
conda install -c conda-forge matplotlib==3.3.4
#sudo apt-get install bzip2 libreadline6 libreadline6-dev openssl
conda install pytorch torchvision torchaudio cudatoolkit -c pytorch
conda install -c conda-forge matplotlib
conda install -c conda-forge pywavelets
conda install -c conda-forge wfdb
conda install -c conda-forge scikit-build
conda install -c conda-forge opencv
conda install -c anaconda pandas
conda install -c anaconda seaborn
conda install -c conda-forge tqdm
conda install -c conda-forge librosa
conda install -c conda-forge configargparse
conda install -c conda-forge regex
#conda install pillow=6.1
conda install -c anaconda cmake
conda install -c conda-forge scipy

AVOBJECTS
conda create -n avobjects --file=environment_droplet.yml python=3.6
conda install -c pytorch pytorch torchvision cudatoolkit=9.2
conda install -c anaconda mkl
conda install -c conda-forge configargparse
conda install -c conda-forge tqdm
conda install -c conda-forge librosa
conda install -c conda-forge av
conda install -c conda-forge opencv
conda install -c anaconda cupy
conda install -c conda-forge moviepy
conda install -c conda-forge dataclasses
## changed line 79 in D:\anaconda\envs\avobjects\Lib\site-packages\moviepy\decorators.py
## changed line 118 in D:\anaconda\envs\avobjects\Lib\site-packages\moviepy\decorators.py

pip install google-colab

pip3 install configargparse

MZdBGGg738kzd5mE

ssh -X gg18045@bc4login.acrc.bris.ac.uk

GA+CL-ECG-NET+CL-PCG-NET
http://dx.doi.org/10.13005/bbra/2610
https://github.com/Aolibaba/ecg_pcg_ga

ECG-PCG Data (Abnormal + Normal)
https://zenodo.org/record/4263528#.YjoW203P2Uk
PCG - 2000Hz
ECG - 1000Hz
Environments: Ubuntu 18.04, Python3.6, tensorflow-gpu==1.10.1, keras==2.2.5, scikit-learn==0.23.2

AVOBJECTS LWTNet
https://doi.org/10.48550/arXiv.2008.04237
https://github.com/afourast/avobjects
Environments: check environment.yml

EPHNOGRAM ECG-PCG-Data (Normal)
https://physionet.org/content/ephnogram/1.0.0/
https://doi.org/10.13026/tjtq-5911
PCG - 8000Hz
ECG - 8000Hz

PHYSIONET ECG-PCG Data (Abnormal + Normal)
https://physionet.org/content/challenge-2016/1.0.0/#files
PCG - 2000Hz
ECG - 2000Hz



BC4:
module add libs/cuda/10.2
module add languages/anaconda3/3.7




wget https://developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64/cuda-wsl-ubuntu.pin
sudo mv cuda-wsl-ubuntu.pin /etc/apt/preferences.d/cuda-repository-pin-600
wget https://developer.download.nvidia.com/compute/cuda/11.4.0/local_installers/cuda-repo-wsl-ubuntu-11-4-local_11.4.0-1_amd64.deb
sudo dpkg -i cuda-repo-wsl-ubuntu-11-4-local_11.4.0-1_amd64.deb
sudo apt-key add /var/cuda-repo-wsl-ubuntu-11-4-local/7fa2af80.pub
sudo apt-get update
sudo apt-get -y install cuda